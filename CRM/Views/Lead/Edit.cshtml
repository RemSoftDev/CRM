@model CRM.Models.LeadViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(e => e.Id, new { leadId = Model.Id })
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" id="phones">
        @Html.LabelFor(m => m.Phones, new { @class = "col-md-1 control-label" })
        <span class="col-md-1">
            <button type="button" id="add_phone" class="btn btn-default"><i class="glyphicon-plus"></i></button>
        </span>
        <div class="col-md-10 margin-bottom phone-type">
            @for (int i = 0; i < Model.Phones.Count; i++)
            {
                @Html.HiddenFor(e => e.Phones[i].Id)
                @Html.TextBoxFor(m => m.Phones[i].PhoneNumber, new { @class = "form-control margin-bottom", placeholder = "Phone Number", data_id = "phone_number" })
                @Html.EnumDropDownListFor(m => m.Phones[i].Type, "Phone Type", new { @class = "form-control margin-bottom", data_id = "phone_type" })
                @Html.ValidationMessageFor(m => m.Phones[i].PhoneNumber, "", new { @class = "text-danger" })

                @*@Html.TextBoxFor(m => m.Phones[i].PhoneNumber, new { @class = "form-control" })
                    @Html.HiddenFor(m => m.Phones[i].Type)*@
            }
            @Html.ValidationMessageFor(m => m.Phones.FirstOrDefault().PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Discipline, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.Discipline, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Discipline, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.AgeGroup, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.AgeGroup, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.AgeGroup, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Status, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.Status, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.StatusNotes, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.StatusNotes, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.StatusNotes, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IssueRaised, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.IssueRaised, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.IssueRaised, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2">Notes</label>
        <div class="col-md-10 margin-bottom" id="notes">
            @for (int i = 0; i < Model.Notes.Count; i++)
            {
                @Html.HiddenFor(m => m.Notes[i].Id)
                @Html.TextAreaFor(m => m.Notes[i].Text, new { @class = "form-control margin-bottom" })
            }
            <button type="button" id="add_note" class="btn btn-default" style="margin-left: 247px;"><i class="glyphicon-plus"></i></button>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2">Message</label>
        <div class="col-md-10 margin-bottom">
            <textarea class="form-control margin-bottom" id="message"></textarea>
            <a href="/Email/Conversation?id=@Model.Id">Conversation</a>
            <button type="button" id="send_message" class="btn btn-default" style="margin-left: 137px;">Send</button>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="edit_button" value="Save" class="btn btn-default" />
        </div>
    </div>
}

@Scripts.Render("~/Scripts/jquery-1.10.2.min.js")
@Scripts.Render("~/scripts/Lead/editLead.js")
@Scripts.Render("~/scripts/phones_addresses.js")
