@model CRM.Models.UserViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(e => e.Id)
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Phones, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @for (int i = 0; i < Model.Phones.Count; i++)
            {
                @Html.HiddenFor(m => m.Phones[i].Id)
                @Html.TextBoxFor(m => m.Phones[i].PhoneNumber, new { @class = "form-control" })  
                @Html.EnumDropDownListFor(m => m.Phones[i].Type, new { @class = "form-control" })
            }
            @Html.ValidationMessageFor(m => m.Phones.FirstOrDefault().PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(e => e.Addresses, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 margin-bottom">
            @for (int i = 0; i < Model.Addresses.Count; i++)
            {
                @Html.HiddenFor(m => m.Addresses[i].Id)
                <div class="col-md-10 margin-bottom">
                    @Html.LabelFor(m => m.Addresses[i].Line1)
                    @Html.TextBoxFor(m => m.Addresses[i].Line1, new { @class = "form-control" })
                </div>
                <div class="col-md-10 margin-bottom">
                    @Html.LabelFor(m => m.Addresses[i].Line2)
                    @Html.TextBoxFor(m => m.Addresses[i].Line2, new { @class = "form-control" })
                </div>
                <div class="col-md-10 margin-bottom">
                    @Html.LabelFor(m => m.Addresses[i].Town)
                    @Html.TextBoxFor(m => m.Addresses[i].Town, new { @class = "form-control" })
                </div>
                <div class="col-md-10 margin-bottom">
                    @Html.LabelFor(m => m.Addresses[i].County)
                    @Html.TextBoxFor(m => m.Addresses[i].County, new { @class = "form-control" })
                </div>
                <div class="col-md-10 margin-bottom">
                    @Html.LabelFor(m => m.Addresses[i].PostCode)
                    @Html.TextBoxFor(m => m.Addresses[i].PostCode, new { @class = "form-control" })
                </div>
                <div class="col-md-10 margin-bottom">
                    @Html.LabelFor(m => m.Addresses[i].Country)
                    @Html.TextBoxFor(m => m.Addresses[i].Country, new { @class = "form-control" })
                </div>
                <div class="col-md-10 margin-bottom">
                    @Html.LabelFor(m => m.Addresses[i].Type)
                    @Html.EnumDropDownListFor(m => m.Addresses[i].Type, new { @class = "form-control" })
                </div>
            }
            @*<button type="button" id="add_note" class="btn btn-default"><i class="glyphicon-plus"></i></button>*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(e => e.Notes, new { @class = "col-md-2" })
        <div class="col-md-10 margin-bottom" id="notes">
            @for (int i = 0; i < Model.Notes.Count; i++)
            {
                @Html.HiddenFor(m => m.Notes[i].Id)
                @Html.TextAreaFor(m => m.Notes[i].Text, new { @class = "form-control margin-bottom" })
            }
            <button type="button" id="add_note" class="btn btn-default"><i class="glyphicon-plus"></i></button>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2">Message</label>
        <div class="col-md-10 margin-bottom">
            <textarea class="form-control margin-bottom" id="message"></textarea>
            <button type="button" id="send_message" class="btn btn-default">Send</button>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="edit_button" value="Save" class="btn btn-default" />
        </div>
    </div>
}

@Scripts.Render("~/Scripts/jquery-1.10.2.min.js")
@Scripts.Render("~/scripts/Customer/editCustomer.js")

